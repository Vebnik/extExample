(()=>{"use strict";async function e(e,t){return console.log("response has already"),chrome.runtime.sendMessage({dataBg:e,name:t},(e=>{})),"send in bg is ok ✅"}chrome.runtime.onMessage.addListener((function(e,t,o){console.log("BG send data ✅");let n={datsy:e.dataRed.datsy,voxi:e.dataRed.redAshVoxi,voxiTask:e.dataRed.redAshVoxiTask,crm:e.dataRed.redAshCrm};console.group("Data in BG"),console.log("Datsy:",n.datsy),console.log("Voxi:",n.voxi),console.log("VoxiTask:",n.voxiTask),console.groupEnd(),o({response:"ok"}),console.log("Metrics calc in ready"),c.datsy(n.datsy),c.voxi(n.voxi,n.voxiTask),c.crm2(n.crm)}));let t={startDate:null,endDate:null,userName:null,userId:null},o={visible:!1},n='style="background-color: #7da5b7; width: 97%; font-size: 14px; outline-style: none; border: none; margin-left: auto; margin-right: auto" type="date"',a='style="background-color: #7da5b7; width: 95%; font-size: 14px; outline-style: none; border: none; margin-left: auto; margin-right: auto"',r='style="position: relative; height: 60%; width: 87%; background-color: darkcyan; border: none; border-radius: 5px 5px; margin-left: auto; margin-right: auto; margin-top: auto; margin-bottom: auto;cursor: pointer"',s={buttonHtml:'<button class="mat-menu-trigger mat-button mat-button-base ng-star-inserted" id="closeOpenMet">Other Tools 📱</button>',mainWindow:`\n\t\t\t<div style="display: none;grid-template-rows: 100%; grid-template-columns: 50% 50%;width: 300px;height: 170px;gap: 3px;background-color: #2196f3;border: #10abff solid 3px;position: absolute;z-index: 1000;top: 4%;left: 50%;" id="metricsWindow">\n\t\t\t\t<div style="display: grid;grid-template-rows: 33% 33% 33%;width: 140px;height: 150px;gap: 3px;background-color: #2196f3;border: #10abff solid 3px;position: relative;z-index: 1000;top: 4%;" id="">\n\t\t\t\t\t<button ${r} id="myButton">Get Tasks 🗓</button>\n\t\t\t\t\t<button ${r} id="myButtonAF">Create Chat ✉</button>\n\t\t\t\t\t<button ${r} id="createRooms">Create Rooms 👨‍🎓</button>\n\t\t\t\t</div>\n    \t\t<div style="display: grid;grid-template-rows: 12% 12% 12% 12% 12% 40%;width: 140px;height: 150px;gap: 3px;background-color: #2196f3;border: #10abff solid 3px;position: relative;z-index: 1000;top: 4%;" id="">\n    \t    <input ${n} title="Start Date" id="startDate" />\n    \t    <input ${n} title="End Date" id="endDate" />\n    \t    <input ${a} title="Name Family" id="userInfo" />\n    \t    <input ${a} title="teacherId" id="userInfoTeach" placeholder="userInfoTeach"/>\n    \t    <input ${a} title="studentId" id="userInfoStd" placeholder="userInfoStd"/>\n    \t    <button style="position: relative; height: 60%; width: 87%; background-color: darkcyan; border: none; border-radius: 5px 5px; margin-left: auto; margin-right: auto; cursor: pointer" title="Submit form" id="submitDate">Get Metrics 💡</button>\n    \t\t</div>\n\t\t\t</div>`},i=function(){o.visible?(document.querySelector("#metricsWindow").style.display="none",o.visible=!1):o.visible||(document.querySelector("#metricsWindow").style.display="grid",o.visible=!0)},l=function(){t.startDate=document.querySelector("#startDate").value,t.endDate=document.querySelector("#endDate").value,t.userName=document.querySelector("#userInfo").value,e(t,"2ndMetrics").then((e=>console.log(e)))},d=function(){t.studentId=document.querySelector("#userInfoStd").value,t.teacherId=document.querySelector("#userInfoTeach").value,e(t,"devRoomCreate").then((e=>console.log(e)))},c={datsy:e=>{let o={cnt:null,time:null,sla:null},n=[];for(const o in e)e[o].forEach((e=>{e.userName===t.userName&&n.push(e)}));n.forEach((e=>{e.assignEventsCnt?o.cnt=e.assignEventsCnt:e.assignTime?o.time=e.assignTime:e["cnt-assign-in-time-and-late"]&&(o.sla=e["cnt-assign-in-time-and-late"])})),console.group("Datsy"),console.log("Ивенты:",o.cnt),console.log("Скорость Взятия:",o.time),console.log("Взято до минуты:",o.sla),console.groupEnd()},voxi:async(e,t)=>{let o={offered:null,handled:null,failed:null,csat:null,rate:null,occ:null};o.offered=t.rows.length;let n=0;await t.rows.forEach((e=>{null===e.dialog_start_at&&++n})),o.handled=o.offered-n,o.failed=n;let a=[];await t.rows.forEach((e=>{null!==e.answered_csat&&a.push(e.answered_csat)}));try{o.csat=a.reduce(((e,t)=>e+t))/a.length}catch{o.csat="Empty"}let r=[];await t.rows.forEach((e=>{null===e.answered_csat&&e.dialog_start_at&&r.push(e)})),o.rate=(o.handled-r.length)/(o.handled/100);let s=[],i={},l={anyStatusTaskWork:0},d=[],c=[];await t.rows.forEach((e=>d.push(e.inservice))),await t.rows.forEach((e=>c.push(e.ready))),d=await Array.from(new Set(d)).reduce(((e,t)=>Number(e)+Number(t))),c=await Array.from(new Set(c)).reduce(((e,t)=>Number(e)+Number(t))),await e.rows.forEach((e=>s.push(e.user_status_name)));let u=Array.from(new Set(s));await e.rows.forEach((e=>{let t=0;for(;t<=u.length;)e.user_status_name===u[t]&&(i[u[t]]+=`+${e.duration}`),++t}));for(const e in i)l[e]=await i[e].split("undefined")[1].split("+").reduce(((e,t)=>Number(e)+Number(t)));for(const e in l)l.anyStatusTaskWork+=l[e];o.occ=await(l.anyStatusTaskWork+d)/(l.anyStatusTaskWork+d+c),console.group("Voxi"),console.log("Offered:",o.offered),console.log("Handled:",o.handled),console.log("Failed:",o.failed),console.log("Csat:",o.csat),console.log("RRate:",o.rate,"%"),console.log("Occ:",100*o.occ,"%"),console.groupEnd()},crm2:async e=>{let t={};t.compTask=e.rows.length;let o=[];await e.rows.forEach((e=>{o.push(e.task_execution_time)})),t.avgExec=await o.reduce(((e,t)=>e+t))/o.length,console.group("CRM"),console.log("Completed Task:",t.compTask),console.log("AHT:",t.avgExec,"Min"),console.log("AHT 24min:",null),console.log("SLA Ass:",null),console.groupEnd()}};window.addEventListener("load",(()=>{setTimeout((function(){let e=document.querySelector(".crm-spacer");e.insertAdjacentHTML("beforebegin",s.buttonHtml),e.insertAdjacentHTML("beforeend",s.mainWindow),document.querySelector("#closeOpenMet").addEventListener("click",i),document.querySelector("#submitDate").addEventListener("click",l)}),3300),setTimeout((function(){document.querySelector("#createRooms").addEventListener("click",d)}),3400)}))})();